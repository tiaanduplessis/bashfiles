#!/usr/bin/env bash

# https://github.com/mathiasbynens/dotfiles/blob/master/.functions
# Determine size of a file or total size of a directory
function fsize?() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* ./*;
	fi;
}

# https://github.com/mathiasbynens/dotfiles/blob/master/.functions
# Compare original and gzipped file size
function gzip?() {
	local origsize=$(wc -c < "$1");
	local gzipsize=$(gzip -c "$1" | wc -c);
	local ratio=$(echo "$gzipsize * 100 / $origsize" | bc -l);
	printf "orig: %d bytes\n" "$origsize";
	printf "gzip: %d bytes (%2.2f%%)\n" "$gzipsize" "$ratio";
}

# https://gist.github.com/bessarabov/674ea13c77fc8128f24b5e3f53b7f094
# https://ivan.bessarabov.com/blog/famous-programmers-work-time
function worktime?() {
	git log --author="$1" --date=iso | perl -nalE 'if (/^Date:\s+[\d-]{10}\s(\d{2})/) { say $1+0 }' | sort | uniq -c|perl -MList::Util=max -nalE '$h{$F[1]} = $F[0]; }{ $m = max values %h; foreach (0..23) { $h{$_} = 0 if not exists $h{$_} } foreach (sort {$a <=> $b } keys %h) { say sprintf "%02d - %4d %s", $_, $h{$_}, "*"x ($h{$_} / $m * 50); }'
}


# Created by Sindre Sorhus
# Magically retrieves a GitHub users email even though it's not publicly shown
# https://github.com/jaredpalmer/dotfiles
function ghemail?() {
        [ "$1" = "" ] && echo "usage: $0 <GitHub username> [<repo>]" && exit 1

        [ "$2" = "" ] && repo=`curl "https://api.github.com/users/$1/repos?type=owner&sort=updated" -s | sed -En 's|"name": "(.+)",|\1|p' | tr -d ' ' | head -n 1` || repo=$2

        curl "https://api.github.com/repos/$1/$repo/commits" -s | sed -En 's|"(email\|name)": "(.+)",?|\2|p' | tr -s ' ' | paste - - | sort -u -k 1,1
}
